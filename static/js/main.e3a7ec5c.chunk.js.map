{"version":3,"sources":["components/welcome/GitIcon.js","components/welcome/Heading.js","components/welcome/FormControl.js","components/welcome/SettingsForm.js","components/welcome/WelcomeScreen.js","components/LoadingScreen.js","components/VictoryScreen.js","components/GameOverScreen.js","components/game/Nav.js","components/game/Card.js","components/game/GameBoard.js","components/game/GameScreen.js","App.js","index.js"],"names":["GitIcon","className","href","target","icon","Heading","FormControl","props","htmlFor","label","children","SettingsForm","handleNameChange","toggleDeck","handleSubmit","onSubmit","e","type","id","name","onChange","required","value","checked","WelcomeScreen","useState","inProp","setInProp","useEffect","CSSTransition","in","timeout","classNames","appear","unmountOnExit","LoadingScreen","deckTheme","setCharacters","setIsLoading","a","url","fetch","response","json","data","results","setTimeout","VictoryScreen","returnHome","onClick","GameOverScreen","Nav","playerName","score","highScore","Card","content","handleClick","isClicked","src","image","alt","GameBoard","cards","map","card","GameScreen","characters","isLoading","setGameOver","setVictory","storageAvailable","saveHighScoreToLocalStorage","getHighScoreFromLocalStorage","currentScore","setCurrentScore","setHighScore","setCards","createDeck","deckSize","deck","i","uuid","push","shuffleDeck","sort","Math","random","parentElement","getId","clickedCard","filter","otherCards","concat","console","log","length","library","add","fab","App","setPlayerName","setDeckTheme","runGame","setRunGame","gameOver","victory","preventDefault","storage","window","x","setItem","removeItem","DOMException","code","localStorage","JSON","stringify","parse","getItem","theme","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3a7ec5c.chunk.js","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport const GitIcon = () => {\n  return (\n    <div className=\"git-icon\">\n      <a href=\"https://github.com/T-McVee/memory-card-project\" target=\"blank\">\n        <span>Created by T-McVee </span>\n        <div className=\"container\">\n          <FontAwesomeIcon icon={[\"fab\", \"github\"]}/>\n        </div>\n      </a>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const Heading = () => {\n  return (\n    <div className=\"heading\">\n      <div className=\"rm-logo\"></div>\n      <h1 className=\"title\">Welcome, To Morty's Memory Mismatch</h1>\n      <p className=\"sub-heading\">Don't click the same card twice Morty, or you'll destroy the universe!</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const FormControl = (props) => {\n  const { htmlFor, label, children } = props;\n  \n  return (\n    <div className=\"form-control\">\n      {label && <label htmlFor={htmlFor}>{label}:</label>}\n      {children}\n    </div>\n  )\n}\n","\nimport { FormControl } from './FormControl'\n\nexport const SettingsForm = (props) => {\n  const { handleNameChange, toggleDeck, handleSubmit } = props;\n\n  return (\n    <form className=\"settings-form\" onSubmit={(e) => handleSubmit(e)}>\n      <div className=\"screen\">\n        <FormControl htmlFor=\"name\" label=\"Name\">\n          <input \n            type=\"text\"   \n            id=\"name\"  \n            name=\"name\" \n            onChange={e => handleNameChange(e)}\n            required \n          />\n        </FormControl>\n        <span>Choose deck</span>\n        <div className=\"radio-group\">\n          <FormControl htmlFor=\"morty\" label=\"Morty\">\n            <input \n              type=\"radio\" \n              id=\"morty\" \n              value=\"morty\" \n              name=\"deck\" \n              onChange={e => toggleDeck(e)} \n              checked={true}  \n            />\n          </FormControl>\n          <FormControl htmlFor=\"rick\" label=\"Rick\">\n            <input type=\"radio\" id=\"rick\" value=\"rick\" name=\"deck\" onChange={e => toggleDeck(e)}/>\n          </FormControl>\n          <div className=\"overlay\"></div>\n        </div>\n      </div>\n      \n      <FormControl>\n        <button className=\"btn-large\" type=\"submit\">Start</button>\n      </FormControl>\n      {props.children}\n    </form>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { GitIcon } from './GitIcon'\nimport { Heading } from './Heading'\nimport { SettingsForm } from './SettingsForm'\nimport { CSSTransition } from 'react-transition-group' \n\nexport const WelcomeScreen = props => {\n  const { handleNameChange, toggleDeck, handleSubmit, } = props\n\n  const [inProp, setInProp] = useState(false);\n\n  useEffect(() => {\n    setInProp(true);\n    return () => {\n      setInProp(false);\n    }\n  }, [])\n\n  return (\n    <CSSTransition\n      in={inProp}\n      timeout={1000}\n      classNames=\"fade\"\n      appear\n      unmountOnExit\n    >\n      <div className=\"welcome-screen\">\n          <GitIcon />\n        <Heading />\n        <SettingsForm \n          handleNameChange={handleNameChange}\n          toggleDeck={toggleDeck}\n          handleSubmit={handleSubmit}\n        /> \n        <div className=\"characters\"></div>\n      </div>\n    </CSSTransition>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { CSSTransition } from 'react-transition-group' \n\nexport const LoadingScreen = (props) => {\n  const { deckTheme, setCharacters, setIsLoading, } = props;\n\n  const [inProp, setInProp] = useState(false);\n\n  useEffect(() => {\n    \n    (async () => {\n      const url = `https://rickandmortyapi.com/api/character/?name=${deckTheme}`\n      const response = await fetch(url)\n      const data = await response.json()\n      setCharacters(data.results)\n      setTimeout(() => {\n        setIsLoading(false)\n      }, 2000); \n    })()\n    setInProp(true)\n\n    return () => {\n      setInProp(false)\n    }\n  })\n\n  return (\n    <CSSTransition\n      in={inProp}\n      timeout={1000}\n      classNames=\"fade\"\n      appear\n      unmountOnExit\n    >\n      <div className=\"loading-screen\">\n        <div className=\"container\">\n          <div className=\"loading-text\">Loading...</div>\n          <div className=\"loading-portal\"></div>\n        </div>\n      </div>\n    </CSSTransition>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport { CSSTransition } from 'react-transition-group' \n\nexport const VictoryScreen = (props) => {\n  const { returnHome } = props\n  \n  const [inProp, setInProp] = useState(false)\n\n  useEffect(() => {\n    setInProp(true)\n\n    return () => {\n      setInProp(false);\n    }\n  }, [])\n\n  return (\n    <div className=\"victory-screen\">\n      <CSSTransition\n        in={inProp}\n        timeout={3000}\n        classNames=\"spin\"\n        appear\n        unmountOnExit\n      >\n        <div className=\"container\">\n          <h2>YOU DID IT MORTY!</h2>\n          <button className=\"btn-large\" onClick={e => returnHome(e)}>Return home</button>\n        </div>\n      </CSSTransition>\n        <div className=\"characters characters-victory\"></div>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport { CSSTransition } from 'react-transition-group' \n\nexport const GameOverScreen = (props) => {\n  const { returnHome } = props\n  \n  const [inProp, setInProp] = useState(false)\n\n  useEffect(() => {\n    setInProp(true)\n\n    return () => {\n      setInProp(false);\n    }\n  }, [])\n\n  return (\n      <div className=\"victory-screen\">\n        <CSSTransition\n          in={inProp}\n          timeout={3000}\n          classNames=\"spin\"\n          appear\n          unmountOnExit\n        >\n          <div className=\"container\">\n            <h2>YOU BLEW IT MORTY!</h2>\n            <button className=\"btn-large\" onClick={e => returnHome(e)}>Return home</button>\n          </div>\n        </CSSTransition>\n        <div className=\"characters characters-fail\"></div>\n      </div>\n    \n  )\n}\n","import React from 'react'\n\nexport const Nav = props => {\n  const { playerName, score, highScore} = props\n\n  return (\n    <nav>\n      <div className=\"container\">\n        <div className=\"score\">\n          <div className=\"current\">{playerName}'s score: {score}</div>\n          <div className=\"high\">High score: {highScore.score} - {highScore.name}</div>\n        </div>\n        <div className=\"credits\"></div>\n      </div>\n    </nav>\n  )\n}\n","import { CSSTransition } from 'react-transition-group' \n\nexport const Card = (props) => {\n  const { id, content, isClicked, handleClick } = props\n  \n  return (\n    <CSSTransition>\n      <div id={id} className=\"card\" onClick={(e) => handleClick(e)}>\n        <div className=\"content-img\">\n          <img className=\"avatar\" src={content.image} alt=\"\"/>\n        </div>\n        <div className=\"content-name\">{content.name}</div>\n        {/* Cheat Mode */}\n        {/* {isClicked && <p>Clicked</p>} */}\n      </div>\n    </CSSTransition>\n  )\n}\n","import { Card } from './Card'\n\nexport const GameBoard = (props) => {\n  const { cards, handleClick } = props\n\n  return (\n    <section className=\"game-board-outer\" id=\"gameBoard\">\n      <div className=\"game-board-inner\">\n        {cards.map(card => \n          <Card \n            key={card.id} \n            id={card.id}\n            content={card.content}\n            isClicked={card.isClicked}\n            handleClick={handleClick}\n          />\n        )}\n      </div>\n    </section>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport { CSSTransition } from 'react-transition-group' \nimport { Nav } from '../game/Nav'\nimport { GameBoard } from '../game/GameBoard'\nimport uuid from 'react-uuid';\n\nexport const GameScreen = props => {\n  const { \n    playerName, \n    characters, \n    isLoading, \n    setIsLoading,\n    setGameOver, \n    setVictory,\n    storageAvailable,\n    saveHighScoreToLocalStorage,\n    getHighScoreFromLocalStorage\n  } = props;\n  \n  const [currentScore, setCurrentScore] = useState(0);\n  const [highScore, setHighScore] = useState({name:'', score: 0,});\n  const [cards, setCards] = useState([]);\n  const [inProp, setInProp] = useState(false);\n  \n\n  // Create deck of n cards\n  const createDeck = (deckSize, data) => {\n    const deck = [];\n\n    for (let i = 1;i <= deckSize; i++) {\n      const card = {\n        id: uuid(),\n        content: {\n          image: data[i + 6].image,\n          name: data[i + 6].name,\n        },\n        isClicked: false,\n      }\n\n      deck.push(card);\n    }\n\n    return deck;\n  }\n\n  // Shuffle Deck\n  const shuffleDeck = (deck) => {\n    return deck.sort(() => Math.random() - 0.5)\n  }\n\n  // On mount populate cards array\n  useEffect(() => {\n    setInProp(true);\n    const deck = createDeck(12, characters);\n    setCards(shuffleDeck(deck));\n\n    //check localstorage for highscore \n    if (storageAvailable('localStorage') && getHighScoreFromLocalStorage()) {\n      setHighScore(getHighScoreFromLocalStorage());\n    } \n   \n    return () => {\n      setInProp(false)\n      setIsLoading(true)\n    }\n  }, []);\n   \n  // return the id of the clicked card\n  const getId = (e) => {\n    if (e.target.id) return e.target.id\n    if (e.target.parentElement.id) return e.target.parentElement.id\n      return e.target.parentElement.parentElement.id\n  }\n\n  //handle card click\n  const handleClick = (e) => {\n    const id = getId(e);\n    \n    const [clickedCard] = [...cards.filter(card => card.id === id)];\n\n    if (clickedCard.isClicked) {\n      \n      // Check for new high score\n      if (currentScore >= highScore.score) {\n        saveHighScoreToLocalStorage({name: playerName, score: currentScore})\n      }\n      \n      setGameOver(true);\n      \n    } else {\n      clickedCard.isClicked = true;\n\n      const otherCards = cards.filter(card => card.id !== id)\n      setCards(otherCards.concat(clickedCard));\n      setCurrentScore(currentScore + 1);\n      console.log('current score:', currentScore)\n\n      setCards(shuffleDeck(cards))\n\n      // check if all cards are clicked\n      if (cards.filter(card => card.isClicked === false).length === 0) {\n        \n        // Check for new high score\n        if (currentScore + 1 >= highScore.score) {\n          saveHighScoreToLocalStorage({name: playerName, score: currentScore + 1})\n        }\n        setVictory(true);\n      } \n    }\n  }\n\n  \n\n  return (\n    <CSSTransition\n      in={inProp}\n      timeout={1000}\n      classNames=\"fade\"\n      appear\n      unmountOnExit\n    >\n      <div className=\"game-screen\">\n        <Nav playerName={playerName} score={currentScore} highScore={highScore}/>\n        {!isLoading &&\n          <GameBoard \n            characters={characters}\n            createDeck={createDeck}\n            cards={cards}\n            setCards={setCards}\n            shuffleDeck={shuffleDeck}\n            handleClick={handleClick}\n          />\n        }\n      </div>\n    </CSSTransition>\n  )\n}\n","import React, { useState } from 'react'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport './style/main.css'\nimport { WelcomeScreen } from './components/welcome/WelcomeScreen'\nimport { LoadingScreen } from './components/LoadingScreen'\nimport { VictoryScreen } from './components/VictoryScreen'\nimport { GameOverScreen } from './components/GameOverScreen'\nimport { GameScreen } from './components/game/GameScreen'\n\n\nlibrary.add(fab)\n\nfunction App() {\n  const [playerName, setPlayerName] = useState('Tim');\n  const [deckTheme, setDeckTheme] = useState('morty');\n  const [characters, setCharacters] = useState({});\n  const [runGame, setRunGame] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [victory, setVictory] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const handleNameChange = (e) => {\n    const {value} = e.target\n\n    setPlayerName(value);\n  }\n\n  const toggleDeck = e => {\n    const theme = e.target.value;\n    setDeckTheme(theme)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    setRunGame(true)\n  }\n\n  const returnHome = (e) => {\n    e.preventDefault()\n\n    setRunGame(false)\n    setDeckTheme('morty')\n    setVictory(false)\n    setGameOver(false)\n    setIsLoading(true)\n  }\n\n  // Check local storage is accessible\n  const storageAvailable = (type) => {\n    let storage;\n    try {\n      storage = window[type];\n      let x = '__storage_test__';\n      storage.setItem(x, x);\n      storage.removeItem(x);\n      return true;\n    }\n    catch (e) {\n      return e instanceof DOMException && (\n        // everything except Firefox\n        e.code === 22 ||\n        // Firefox\n        e.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        e.name === 'QuotaExceededError' ||\n        // Firefox\n        e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n        // acknowledge QuotaExceededError only if there's something already stored\n        (storage && storage.length !== 0);\n    }\n  }\n\n  const saveHighScoreToLocalStorage = (highScore) => {\n    //console.log('POPULATE STORAGE:');\n    localStorage.setItem('highScore', JSON.stringify(highScore));\n    //console.log(`Update: `, myLists);\n  }\n\n  const getHighScoreFromLocalStorage = () => {\n    //console.log('SET LISTS:');\n    const storageItem = JSON.parse(localStorage.getItem('highScore'));\n    \n    return storageItem;\n  }\n\n  return (\n    <div className=\"App\">\n      {!runGame ? (\n        <WelcomeScreen  \n          deckTheme={deckTheme}\n          handleNameChange={handleNameChange}\n          toggleDeck={toggleDeck}\n          handleSubmit={handleSubmit}\n        />\n      ) : runGame && isLoading ? (\n        <LoadingScreen\n          deckTheme={deckTheme} \n          characters={characters}\n          setCharacters={setCharacters}\n          setIsLoading={setIsLoading}\n        />\n      ) : runGame && victory ? (\n        <VictoryScreen returnHome={returnHome} />\n      ) : runGame && gameOver ? (\n        <GameOverScreen returnHome={returnHome} />\n      ) : (\n        <GameScreen\n          runGame={runGame}\n          setRunGame={setRunGame}\n          playerName={playerName}\n          deckTheme={deckTheme}\n          characters={characters}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n          setGameOver={setGameOver}\n          setVictory={setVictory}\n          storageAvailable={storageAvailable}\n          saveHighScoreToLocalStorage={saveHighScoreToLocalStorage}\n          getHighScoreFromLocalStorage={getHighScoreFromLocalStorage}\n        />\n      )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}